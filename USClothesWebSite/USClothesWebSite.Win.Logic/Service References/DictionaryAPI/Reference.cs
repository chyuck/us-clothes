//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USClothesWebSite.Win.Logic.DictionaryAPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", ConfigurationName="DictionaryAPI.IDictionaryAPI")]
    public interface IDictionaryAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetBrands", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetBrandsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetBrandsErrorDataFau" +
            "lt", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.Brand[] GetBrands(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetBrands", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetBrandsResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.Brand[]> GetBrandsAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateBrandErrorDataF" +
            "ault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandResponse CreateBrand(USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateBrandResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandResponse> CreateBrandAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateBrandErrorDataF" +
            "ault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        string UpdateBrand(USClothesWebSite.DTO.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateBrandResponse")]
        System.Threading.Tasks.Task<string> UpdateBrandAsync(USClothesWebSite.DTO.Brand brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetCategories", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetCategoriesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetCategoriesErrorDat" +
            "aFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.Category[] GetCategories(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetCategories", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetCategoriesResponse" +
            "")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.Category[]> GetCategoriesAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesByCat" +
            "egory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesByCat" +
            "egoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesByCat" +
            "egoryErrorDataFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.SubCategory[] GetSubCategoriesByCategory(USClothesWebSite.DTO.Category category, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesByCat" +
            "egory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesByCat" +
            "egoryResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.SubCategory[]> GetSubCategoriesByCategoryAsync(USClothesWebSite.DTO.Category category, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategories", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesError" +
            "DataFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.SubCategory[] GetSubCategories(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategories", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSubCategoriesRespo" +
            "nse")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.SubCategory[]> GetSubCategoriesAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateCategoryRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateCategoryErrorDa" +
            "taFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryResponse CreateCategory(USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateCategoryRespons" +
            "e")]
        System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryResponse> CreateCategoryAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateCategoryRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateCategoryErrorDa" +
            "taFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        string UpdateCategory(USClothesWebSite.DTO.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateCategoryRespons" +
            "e")]
        System.Threading.Tasks.Task<string> UpdateCategoryAsync(USClothesWebSite.DTO.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSubCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSubCategoryResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSubCategoryErro" +
            "rDataFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryResponse CreateSubCategory(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSubCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSubCategoryResp" +
            "onse")]
        System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryResponse> CreateSubCategoryAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSubCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSubCategoryResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSubCategoryErro" +
            "rDataFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        string UpdateSubCategory(USClothesWebSite.DTO.SubCategory subCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSubCategory", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSubCategoryResp" +
            "onse")]
        System.Threading.Tasks.Task<string> UpdateSubCategoryAsync(USClothesWebSite.DTO.SubCategory subCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesBySubCategory" +
            "AndBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesBySubCategory" +
            "AndBrandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesBySubCategory" +
            "AndBrandErrorDataFault", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.Size[] GetSizesBySubCategoryAndBrand(USClothesWebSite.DTO.SubCategory subCategory, USClothesWebSite.DTO.Brand brand, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesBySubCategory" +
            "AndBrand", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesBySubCategory" +
            "AndBrandResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.Size[]> GetSizesBySubCategoryAndBrandAsync(USClothesWebSite.DTO.SubCategory subCategory, USClothesWebSite.DTO.Brand brand, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizes", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesErrorDataFaul" +
            "t", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.DTO.Size[] GetSizes(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizes", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/GetSizesResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.DTO.Size[]> GetSizesAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSize", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSizeErrorDataFa" +
            "ult", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeResponse CreateSize(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSize", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/CreateSizeResponse")]
        System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeResponse> CreateSizeAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSize", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(USClothesWebSite.DTO.ErrorData), Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSizeErrorDataFa" +
            "ult", Name="ErrorData", Namespace="http://usclothes.ru/dto/errordata")]
        string UpdateSize(USClothesWebSite.DTO.Size size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSize", ReplyAction="http://usclothes.ru/webservice/dictionaryapi/IDictionaryAPI/UpdateSizeResponse")]
        System.Threading.Tasks.Task<string> UpdateSizeAsync(USClothesWebSite.DTO.Size size);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBrand", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateBrandRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public USClothesWebSite.DTO.Brand brand;
        
        public CreateBrandRequest() {
        }
        
        public CreateBrandRequest(USClothesWebSite.DTO.Brand brand) {
            this.brand = brand;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBrandResponse", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateBrandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public string CreateBrandResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=1)]
        public USClothesWebSite.DTO.Brand brand;
        
        public CreateBrandResponse() {
        }
        
        public CreateBrandResponse(string CreateBrandResult, USClothesWebSite.DTO.Brand brand) {
            this.CreateBrandResult = CreateBrandResult;
            this.brand = brand;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCategory", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public USClothesWebSite.DTO.Category category;
        
        public CreateCategoryRequest() {
        }
        
        public CreateCategoryRequest(USClothesWebSite.DTO.Category category) {
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCategoryResponse", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public string CreateCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=1)]
        public USClothesWebSite.DTO.Category category;
        
        public CreateCategoryResponse() {
        }
        
        public CreateCategoryResponse(string CreateCategoryResult, USClothesWebSite.DTO.Category category) {
            this.CreateCategoryResult = CreateCategoryResult;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSubCategory", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateSubCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public USClothesWebSite.DTO.SubCategory subCategory;
        
        public CreateSubCategoryRequest() {
        }
        
        public CreateSubCategoryRequest(USClothesWebSite.DTO.SubCategory subCategory) {
            this.subCategory = subCategory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSubCategoryResponse", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateSubCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public string CreateSubCategoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=1)]
        public USClothesWebSite.DTO.SubCategory subCategory;
        
        public CreateSubCategoryResponse() {
        }
        
        public CreateSubCategoryResponse(string CreateSubCategoryResult, USClothesWebSite.DTO.SubCategory subCategory) {
            this.CreateSubCategoryResult = CreateSubCategoryResult;
            this.subCategory = subCategory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSize", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateSizeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public USClothesWebSite.DTO.Size size;
        
        public CreateSizeRequest() {
        }
        
        public CreateSizeRequest(USClothesWebSite.DTO.Size size) {
            this.size = size;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSizeResponse", WrapperNamespace="http://usclothes.ru/webservice/dictionaryapi", IsWrapped=true)]
    public partial class CreateSizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=0)]
        public string CreateSizeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://usclothes.ru/webservice/dictionaryapi", Order=1)]
        public USClothesWebSite.DTO.Size size;
        
        public CreateSizeResponse() {
        }
        
        public CreateSizeResponse(string CreateSizeResult, USClothesWebSite.DTO.Size size) {
            this.CreateSizeResult = CreateSizeResult;
            this.size = size;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDictionaryAPIChannel : USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DictionaryAPIClient : System.ServiceModel.ClientBase<USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI>, USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI {
        
        public DictionaryAPIClient() {
        }
        
        public DictionaryAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DictionaryAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DictionaryAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public USClothesWebSite.DTO.Brand[] GetBrands(string filter) {
            return base.Channel.GetBrands(filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.Brand[]> GetBrandsAsync(string filter) {
            return base.Channel.GetBrandsAsync(filter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandResponse USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI.CreateBrand(USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest request) {
            return base.Channel.CreateBrand(request);
        }
        
        public string CreateBrand(ref USClothesWebSite.DTO.Brand brand) {
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest inValue = new USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest();
            inValue.brand = brand;
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandResponse retVal = ((USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI)(this)).CreateBrand(inValue);
            brand = retVal.brand;
            return retVal.CreateBrandResult;
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandResponse> CreateBrandAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateBrandRequest request) {
            return base.Channel.CreateBrandAsync(request);
        }
        
        public string UpdateBrand(USClothesWebSite.DTO.Brand brand) {
            return base.Channel.UpdateBrand(brand);
        }
        
        public System.Threading.Tasks.Task<string> UpdateBrandAsync(USClothesWebSite.DTO.Brand brand) {
            return base.Channel.UpdateBrandAsync(brand);
        }
        
        public USClothesWebSite.DTO.Category[] GetCategories(string filter) {
            return base.Channel.GetCategories(filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.Category[]> GetCategoriesAsync(string filter) {
            return base.Channel.GetCategoriesAsync(filter);
        }
        
        public USClothesWebSite.DTO.SubCategory[] GetSubCategoriesByCategory(USClothesWebSite.DTO.Category category, string filter) {
            return base.Channel.GetSubCategoriesByCategory(category, filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.SubCategory[]> GetSubCategoriesByCategoryAsync(USClothesWebSite.DTO.Category category, string filter) {
            return base.Channel.GetSubCategoriesByCategoryAsync(category, filter);
        }
        
        public USClothesWebSite.DTO.SubCategory[] GetSubCategories(string filter) {
            return base.Channel.GetSubCategories(filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.SubCategory[]> GetSubCategoriesAsync(string filter) {
            return base.Channel.GetSubCategoriesAsync(filter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryResponse USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI.CreateCategory(USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest request) {
            return base.Channel.CreateCategory(request);
        }
        
        public string CreateCategory(ref USClothesWebSite.DTO.Category category) {
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest inValue = new USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest();
            inValue.category = category;
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryResponse retVal = ((USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI)(this)).CreateCategory(inValue);
            category = retVal.category;
            return retVal.CreateCategoryResult;
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryResponse> CreateCategoryAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateCategoryRequest request) {
            return base.Channel.CreateCategoryAsync(request);
        }
        
        public string UpdateCategory(USClothesWebSite.DTO.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCategoryAsync(USClothesWebSite.DTO.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryResponse USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI.CreateSubCategory(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest request) {
            return base.Channel.CreateSubCategory(request);
        }
        
        public string CreateSubCategory(ref USClothesWebSite.DTO.SubCategory subCategory) {
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest inValue = new USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest();
            inValue.subCategory = subCategory;
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryResponse retVal = ((USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI)(this)).CreateSubCategory(inValue);
            subCategory = retVal.subCategory;
            return retVal.CreateSubCategoryResult;
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryResponse> CreateSubCategoryAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSubCategoryRequest request) {
            return base.Channel.CreateSubCategoryAsync(request);
        }
        
        public string UpdateSubCategory(USClothesWebSite.DTO.SubCategory subCategory) {
            return base.Channel.UpdateSubCategory(subCategory);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSubCategoryAsync(USClothesWebSite.DTO.SubCategory subCategory) {
            return base.Channel.UpdateSubCategoryAsync(subCategory);
        }
        
        public USClothesWebSite.DTO.Size[] GetSizesBySubCategoryAndBrand(USClothesWebSite.DTO.SubCategory subCategory, USClothesWebSite.DTO.Brand brand, string filter) {
            return base.Channel.GetSizesBySubCategoryAndBrand(subCategory, brand, filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.Size[]> GetSizesBySubCategoryAndBrandAsync(USClothesWebSite.DTO.SubCategory subCategory, USClothesWebSite.DTO.Brand brand, string filter) {
            return base.Channel.GetSizesBySubCategoryAndBrandAsync(subCategory, brand, filter);
        }
        
        public USClothesWebSite.DTO.Size[] GetSizes(string filter) {
            return base.Channel.GetSizes(filter);
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.DTO.Size[]> GetSizesAsync(string filter) {
            return base.Channel.GetSizesAsync(filter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeResponse USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI.CreateSize(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest request) {
            return base.Channel.CreateSize(request);
        }
        
        public string CreateSize(ref USClothesWebSite.DTO.Size size) {
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest inValue = new USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest();
            inValue.size = size;
            USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeResponse retVal = ((USClothesWebSite.Win.Logic.DictionaryAPI.IDictionaryAPI)(this)).CreateSize(inValue);
            size = retVal.size;
            return retVal.CreateSizeResult;
        }
        
        public System.Threading.Tasks.Task<USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeResponse> CreateSizeAsync(USClothesWebSite.Win.Logic.DictionaryAPI.CreateSizeRequest request) {
            return base.Channel.CreateSizeAsync(request);
        }
        
        public string UpdateSize(USClothesWebSite.DTO.Size size) {
            return base.Channel.UpdateSize(size);
        }
        
        public System.Threading.Tasks.Task<string> UpdateSizeAsync(USClothesWebSite.DTO.Size size) {
            return base.Channel.UpdateSizeAsync(size);
        }
    }
}
